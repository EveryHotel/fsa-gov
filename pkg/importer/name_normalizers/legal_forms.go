package name_normalizers

import (
	"regexp"
	"strings"

	"github.com/EveryHotel/fsa-gov/pkg/importer"
)

type LegalFormsNormalizer interface {
	GetNormalizer() importer.NameNormalizer
}

type legalFormsNormalizer struct {
	legalForms         []string
	accommodationTypes []string
}

func NewLegalFormsNormalizer(
	legalForms []string,
	accommodationTypes []string,
) LegalFormsNormalizer {
	return &legalFormsNormalizer{
		legalForms:         legalForms,
		accommodationTypes: accommodationTypes,
	}
}

func (n *legalFormsNormalizer) GetNormalizer() importer.NameNormalizer {
	return func(name string) (string, bool) {
		s := name

		for _, form := range n.legalForms {
			// (?i) - поиск без учёта регистра
			// (?:^|[\s"]) - форма должна начинаться либо с начала строки, либо после пробела, либо двойной кавычки
			// (?:\s|"|$) - и заканчиваться пробелом, концом строки или двойной кавычкой
			re := regexp.MustCompile(`(?i)(?:^|[\s"])` + regexp.QuoteMeta(form) + `(?:\s|"|$)`)
			// loc != nil - совпадение найдено
			// loc[0] > 0 - форма не в начале строки (иначе получится пустая строка, если её обрезать).
			loc := re.FindStringIndex(s)
			if loc != nil {
				if loc[0] == 0 {
					// если форма в начале - удаляем её
					s = strings.TrimSpace(s[loc[1]:])
				} else {
					// иначе - обрезаем всё справа
					s = strings.TrimSpace(s[:loc[0]])
				}
				break
			}
		}

		// проверяем чтобы после обработки не остался лишь тип средства размещения
		// хотя в базе и встречаются исходные названия в которых указано просто например "гостиница"
		isOverNormalized := false
		for _, t := range n.accommodationTypes {
			if strings.ToLower(s) == strings.ToLower(t) {
				isOverNormalized = true
			}
		}

		// нормализуем пробелы
		s = strings.Join(strings.Fields(s), " ")

		return s, s != name && s != "" && !isOverNormalized
	}
}

var LegalForms = []string{
	// Индивидуальные предприниматели
	"ип",
	"индивидуальный предприниматель",
	// ООО
	"ооо",
	"общество с ограниченной ответственностью",
	// Акционерные общества
	"пао",
	"публичное акционерное общество",
	"зао",
	"закрытое акционерное общество",
	"оао",
	"открытое акционерное общество",
	"ао",
	"акционерное общество",
	// Государственные и муниципальные учреждения
	"фгбу",
	"федеральное государственное бюджетное учреждение",
	"гбу",
	"государственное бюджетное учреждение",
	"мбу",
	"муниципальное бюджетное учреждение",
	"гау",
	"государственное автономное учреждение",
	"мау",
	"муниципальное автономное учреждение",
	"гку",
	"государственное казенное учреждение",
	"мку",
	"муниципальное казенное учреждение",
	// Унитарные предприятия
	"фгуп",
	"федеральное государственное унитарное предприятие",
	"гуп",
	"государственное унитарное предприятие",
	"муп",
	"муниципальное унитарное предприятие",
	// Ассоциации и некоммерческие
	"ано",
	"автономная некоммерческая организация",
	"нко",
	"некоммерческая организация",
	"ассоциация",
	"союз",
	"тсн",
	"товарищество собственников недвижимости",
}

var AccommodationTypes = []string{
	"гостиница",
	"отель",
	"мини-отель",
	"мини отель",
	"хостел",
	"мотель",
	"апартаменты",
	"гостевой дом",
	"пансионат",
	"санаторий",
	"дом отдыха",
	"база отдыха",
	"туристская база",
	"турбаза",
	"кемпинг",
	"курорт",
	"курортный отель",
	"гостиничный комплекс",
	"туристический комплекс",
	"комплекс отдыха",
	// -----
	"парк-отель",
	"эко-отель",
	"спа-отель",
	"wellness-отель",
	"resort",
	"spa resort",
	"boutique hotel",
	"design hotel",
	"apart-hotel",
	"апарт-отель",
	// -----
	"коттедж",
	"шале",
	"усадьба",
	"резиденция",
	"глэмпинг",
	"кемпинговый городок",
	"туристский приют",
	// ----
	"лечебно-оздоровительный комплекс",
	"санаторий-профилакторий",
	"санаторно-курортный комплекс",
	"пансионат с лечением",
	"реабилитационный центр",
	"детский оздоровительный лагерь",
	"детский лагерь",
	"спортивно-оздоровительный комплекс",
	"природно-реабилитационный комплекс",
	"туристско-рекреационный комплекс",
	"оздоровительный комплекс",
	"оздоровительный центр",
	"туристская деревня",
	"туристский центр",
	"охотничья база",
	"рыболовная база",
	"туристско-спортивный лагерь",
}
